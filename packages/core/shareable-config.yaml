# http://eslint.org/docs/rules/

# Extends - Extend other config
# -- Core: No use --


# Parser Options
root: true
parser: espree
parserOptions:
  ecmaVersion: 2022
  sourceType: script
  ecmaFeatures:
    globalReturn: false
    impliedStrict: false
    jsx: false


# Environments
env:
  es6: true


# Globals
globals: {}


# Plugins - Additional plugins
plugins:
  - unicorn


# Settings - Shared Settings
# settings:


# Rules
rules:

  # Possible Errors
  for-direction: [error]
  getter-return: [error]
  no-async-promise-executor: [error]
  no-await-in-loop: [error]
  no-compare-neg-zero: [error]
  no-cond-assign: [error, always]
  no-console: [error]
  no-constant-condition: [error]
  no-control-regex: [error]
  no-debugger: [error]
  no-dupe-args: [error]
  no-dupe-else-if: [error]
  no-dupe-keys: [error]
  no-duplicate-case: [error]
  no-empty-character-class: [error]
  no-empty: [error, { allowEmptyCatch: false }]
  no-ex-assign: [error]
  no-extra-boolean-cast: [error]
  # no-extra-parens (Via Prettier)
  # no-extra-semi (Via Prettier)
  no-func-assign: [error]
  no-import-assign: [error]
  no-inner-declarations: [error, both]
  no-invalid-regexp: [error]
  no-irregular-whitespace: [error]
  no-loss-of-precision: [error]
  no-misleading-character-class: [error]
  no-obj-calls: [error]
  no-promise-executor-return: [error]
  no-prototype-builtins: [error]
  no-regex-spaces: [error]
  no-setter-return: [error]
  no-sparse-arrays: [error]
  no-template-curly-in-string: [error]
  # no-unexpected-multiline (Via Prettier)
  no-unreachable: [error]
  no-unreachable-loop: [error]
  no-unsafe-finally: [error]
  no-unsafe-negation: [error, { enforceForOrderingRelations: true }]
  no-unsafe-optional-chaining: [error]
  no-unused-private-class-members: [error]
  require-atomic-updates: [error]
  use-isnan: [error, { enforceForSwitchCase: true, enforceForIndexOf: true }]
  valid-typeof: [error, { requireStringLiterals: true }]


  # Best Practices
  accessor-pairs: [error, { setWithoutGet: true, getWithoutSet: false, enforceForClassMembers: true }]
  array-callback-return: [error, { allowImplicit: true }]
  block-scoped-var: [error]
  class-methods-use-this: [off]
  complexity: [off]
  consistent-return: [error]
  # curly (Via Prettier)
  default-case: [error]
  default-param-last: [off]
  # dot-location (Via Prettier)
  dot-notation: [error, { allowKeywords: true }]
  eqeqeq: [error, always]
  grouped-accessor-pairs: [error, getBeforeSet]
  guard-for-in: [error]
  max-classes-per-file: [off]
  no-alert: [error]
  no-caller: [error]
  no-case-declarations: [error]
  no-constructor-return: [off]
  no-div-regex: [error]
  no-else-return: [error]
  no-empty-function: [error]
  no-empty-pattern: [error]
  no-eq-null: [error]
  no-eval: [error]
  no-extend-native: [error]
  no-extra-bind: [error]
  no-extra-label: [error]
  no-fallthrough: [error]
  # no-floating-decimal (Via Prettier)
  no-global-assign: [error]
  no-implicit-coercion: [error, { disallowTemplateShorthand: true }]
  no-implicit-globals: [error]
  no-implied-eval: [error]
  no-invalid-this: [off]
  no-iterator: [error]
  no-labels: [error]
  no-lone-blocks: [error]
  no-loop-func: [error]
  no-magic-numbers: [off]
  # no-multi-spaces (Via Prettier)
  no-multi-str: [error]
  no-new-func: [error]
  no-nonoctal-decimal-escape: [error]
  no-new-wrappers: [error]
  no-new: [error]
  no-octal-escape: [error]
  no-octal: [error]
  no-param-reassign: [error]
  no-proto: [error]
  no-redeclare: [error, { builtinGlobals: true }]
  no-restricted-properties: [off]
  no-return-assign: [error, always]
  no-return-await: [error]
  no-script-url: [error]
  no-self-assign: [error, { props: true }]
  no-self-compare: [error]
  no-sequences: [error]
  no-throw-literal: [error]
  no-unmodified-loop-condition: [error]
  no-unused-expressions: [error]
  no-unused-labels: [error]
  no-useless-call: [error]
  no-useless-catch: [error]
  no-useless-concat: [error]
  no-useless-escape: [error]
  no-useless-return: [error]
  no-void: [error]
  no-warning-comments: [error, { location: anywhere }]
  no-with: [error]
  prefer-named-capture-group: [error]
  prefer-promise-reject-errors: [error]
  prefer-regex-literals: [error]
  radix: [error, always]
  require-await: [error]
  require-unicode-regexp: [error]
  vars-on-top: [error]
  # wrap-iife (Via Prettier)
  yoda: [error, never]


  # Strict Mode
  # --- Per sub-config ------


  # Variables
  init-declarations: [off]
  no-delete-var: [error]
  no-label-var: [error]
  no-restricted-globals: [error, window]
  no-shadow-restricted-names: [error]
  no-shadow: [error, { builtinGlobals: false, hoist: all }]
  no-undef-init: [error]
  no-undef: [error]
  no-undefined: [off]
  no-unused-vars: [error, { ignoreRestSiblings: true }]
  no-use-before-define: [error]


  # Stylistic Issues
  # array-bracket-newline (Via Prettier)
  # array-bracket-spacing (Via Prettier)
  # array-element-newline (Via Prettier)
  # block-spacing (Via Prettier)
  # brace-style (Via Prettier)
  camelcase: [error, { properties: always }]
  capitalized-comments: [off]
  # comma-dangle (Via Prettier)
  # comma-spacing (Via Prettier)
  # comma-style (Via Prettier)
  # computed-property-spacing (Via Prettier)
  consistent-this: [error, self]
  # eol-last (Via Prettier)
  # func-call-spacing (Via Prettier)
  func-name-matching: [error]
  func-names: [error, never]
  func-style: [error, expression]
  # function-call-argument-newline (Via Prettier)
  # function-paren-newline (Via Prettier)
  id-denylist: [off]
  id-length: [off]
  id-match: [off]
  # implicit-arrow-linebreak (Via Prettier)
  # indent (Via Prettier)
  # jsx-quotes (Via Prettier)
  # key-spacing (Via Prettier)
  # keyword-spacing (Via Prettier)
  line-comment-position: [off]
  # linebreak-style (Via Prettier)
  # lines-around-comment (Via Prettier)
  lines-between-class-members: [error, always, { exceptAfterSingleLine: true }]
  max-depth: [off]
  # max-len (Via Prettier)
  max-lines: [off]
  max-lines-per-function: [off]
  max-nested-callbacks: [off]
  max-params: [off]
  max-statements: [off]
  max-statements-per-line: [error, { max: 2 }]
  multiline-comment-style: [off]
  # multiline-ternary (Via Prettier)
  new-cap: [error, { newIsCap: true, capIsNew: true, properties: false }]
  # new-parens (Via Prettier)
  # newline-per-chained-call (Via Prettier)
  no-array-constructor: [error]
  no-bitwise: [error]
  no-continue: [error]
  no-inline-comments: [off]
  no-lonely-if: [error]
  # no-mixed-operators (Via Prettier)
  # no-mixed-spaces-and-tabs (Via Prettier)
  no-multi-assign: [error]
  # no-multiple-empty-lines (Via Prettier)
  no-negated-condition: [off]
  no-nested-ternary: [off]
  no-new-object: [error]
  no-plusplus: [off]
  no-restricted-syntax: [off]
  # no-tabs (Via Prettier)
  no-ternary: [off]
  # no-trailing-spaces (Via Prettier)
  no-underscore-dangle: [off]
  no-unneeded-ternary: [error, { defaultAssignment: false }]
  # no-whitespace-before-property (Via Prettier)
  # nonblock-statement-body-position (Via Prettier)
  # object-curly-newline (Via Prettier)
  # object-curly-spacing (Via Prettier)
  # object-property-newline (Via Prettier)
  # one-var-declaration-per-line (Via Prettier)
  one-var: [error, never]
  operator-assignment: [error, always]
  # operator-linebreak (Via Prettier)
  # padded-blocks (Via Prettier)
  padding-line-between-statements:
    - error
    - { blankLine: always, prev: directive, next: '*' }
    - { blankLine: always, prev: '*', next: return }
  prefer-exponentiation-operator: [error]
  prefer-object-spread: [off]
  # quote-props (Via Prettier)
  # quotes (Via Prettier)
  # semi (Via Prettier)
  # semi-spacing (Via Prettier)
  # semi-style (Via Prettier)
  sort-keys: [off]
  sort-vars: [off]
  # space-before-blocks (Via Prettier)
  # space-before-function-paren (Via Prettier)
  # space-in-parens (Via Prettier)
  # space-infix-ops (Via Prettier)
  # space-unary-ops (Via Prettier)
  spaced-comment:
    - error
    - always
    - exceptions: ['-', '*']
      markers: ['=', '--']
      block:
        balanced: true
  # switch-colon-spacing (Via Prettier)
  # template-tag-spacing (Via Prettier)
  # unicode-bom (Via Prettier)
  # wrap-regex (Via Prettier)


  # ECMAScript 6
  arrow-body-style: [error, always]
  # arrow-parens (Via Prettier)
  # arrow-spacing (Via Prettier)
  constructor-super: [error]
  # generator-star-spacing (Via Prettier)
  no-class-assign: [error]
  # no-confusing-arrow (Via Prettier)
  no-const-assign: [error]
  no-constant-binary-expression: [error]
  no-dupe-class-members: [error]
  no-duplicate-imports: [error]
  no-new-symbol: [error]
  no-restricted-imports: [off]
  no-this-before-super: [error]
  no-useless-computed-key: [error]
  no-useless-constructor: [error]
  no-useless-rename: [error]
  no-var: [error]
  object-shorthand: [error, always]
  prefer-arrow-callback: [error]
  prefer-const: [error, { destructuring: any, ignoreReadBeforeAssign: false }]
  prefer-destructuring: [error, { array: true, object: true}, { enforceForRenamedProperties: false }]
  prefer-numeric-literals: [error]
  prefer-object-has-own: [error]
  prefer-rest-params: [error]
  prefer-spread: [error]
  prefer-template: [error]
  require-yield: [error]
  # rest-spread-spacing (Via Prettier)
  symbol-description: [error]
  sort-imports: [off]
  # template-curly-spacing (Via Prettier)
  # yield-star-spacing (Via Prettier)




  # ðŸ¦„ Unicorn
  unicorn/better-regex: [error]
  unicorn/catch-error-name: [error]
  unicorn/consistent-destructuring: [off]
  unicorn/consistent-function-scoping: [error]
  unicorn/custom-error-definition: [error]
  # unicorn/empty-brace-spaces (Via Prettier)
  unicorn/error-message: [error]
  unicorn/escape-case: [error]
  unicorn/expiring-todo-comments: [off]
  unicorn/explicit-length-check: [error]
  unicorn/filename-case: [off]
  unicorn/import-index: [off]
  unicorn/import-style: [off]
  unicorn/new-for-builtins: [error]
  unicorn/no-abusive-eslint-disable: [error]
  unicorn/no-array-callback-reference: [off]
  unicorn/no-array-for-each: [off]
  unicorn/no-array-method-this-argument: [error]
  unicorn/no-array-push-push: [error]
  unicorn/no-array-reduce: [off]
  unicorn/no-await-expression-member: [error]
  unicorn/no-console-spaces: [error]
  # unicorn/no-document-cookie (Per sub-config)
  unicorn/no-empty-file: [off]
  unicorn/no-for-loop: [error]
  unicorn/no-hex-escape: [error]
  unicorn/no-instanceof-array: [error]
  # unicorn/no-invalid-remove-event-listener (Per sub-config)
  unicorn/no-keyword-prefix: [off]
  unicorn/no-lonely-if: [error]
  # unicorn/no-nested-ternary (Via Prettier)
  unicorn/no-new-array: [error]
  # unicorn/no-new-buffer (Per sub-config)
  # unicorn/no-process-exit (Per sub-config)
  unicorn/no-null: [off]
  unicorn/no-object-as-default-parameter: [error]
  unicorn/no-static-only-class: [error]
  unicorn/no-thenable: [error]
  unicorn/no-this-assignment: [error]
  unicorn/no-unreadable-array-destructuring: [error]
  unicorn/no-unreadable-iife: [error]
  unicorn/no-unsafe-regex: [off]
  unicorn/no-unused-properties: [error]
  unicorn/no-useless-fallback-in-spread: [error]
  unicorn/no-useless-length-check: [error]
  unicorn/no-useless-promise-resolve-reject: [error]
  unicorn/no-useless-spread: [error]
  unicorn/no-useless-switch-case: [error]
  unicorn/no-useless-undefined: [error]
  unicorn/no-zero-fractions: [error]
  # unicorn/number-literal-case (Via Prettier)
  unicorn/numeric-separators-style: [error, { onlyIfContainsSeparator: true }]
  # unicorn/prefer-add-event-listener (Per sub-config)
  unicorn/prefer-array-find: [error]
  unicorn/prefer-array-flat: [error]
  unicorn/prefer-array-flat-map: [error]
  unicorn/prefer-array-index-of: [error]
  unicorn/prefer-array-some: [error]
  unicorn/prefer-at: [off] # No Node.js support
  unicorn/prefer-code-point: [error]
  unicorn/prefer-date-now: [error]
  unicorn/prefer-default-parameters: [error]
  # unicorn/prefer-dom-node-append (Per sub-config)
  # unicorn/prefer-dom-node-dataset (Per sub-config)
  # unicorn/prefer-dom-node-remove (Per sub-config)
  # unicorn/prefer-dom-node-text-content (Per sub-config)
  # unicorn/prefer-event-target (Per sub-config)
  unicorn/prefer-export-from: [error]
  unicorn/prefer-includes: [error]
  # unicorn/prefer-json-parse-buffer (Pre sub-config)
  # unicorn/prefer-keyboard-event-key (Per sub-config)
  unicorn/prefer-logical-operator-over-ternary: [error]
  # unicorn/prefer-modern-dom-apis (Per sub-config)
  unicorn/prefer-negative-index: [error]
  unicorn/prefer-math-trunc: [error]
  unicorn/prefer-modern-math-apis: [error]
  # unicorn/prefer-module (Per sub-config)
  unicorn/prefer-native-coercion-functions: [error]
  # unicorn/prefer-node-protocol (Per sub-config)
  unicorn/prefer-number-properties: [error]
  unicorn/prefer-object-from-entries: [error]
  unicorn/prefer-object-has-own: [error]
  unicorn/prefer-optional-catch-binding: [error]
  unicorn/prefer-prototype-methods: [error]
  # unicorn/prefer-query-selector (Per sub-config)
  unicorn/prefer-reflect-apply: [off]
  unicorn/prefer-regexp-test: [error]
  unicorn/prefer-set-has: [off]
  unicorn/prefer-spread: [error]
  unicorn/prefer-string-replace-all: [error]
  unicorn/prefer-string-starts-ends-with: [error]
  unicorn/prefer-string-slice: [error]
  unicorn/prefer-string-trim-start-end: [error]
  unicorn/prefer-switch: [error, { emptyDefaultCase: do-nothing-comment }]
  unicorn/prefer-ternary: [off]
  unicorn/prefer-top-level-await: [off] # Wait for Node.js 14+ and no CommonJS
  unicorn/prefer-type-error: [error]
  unicorn/prevent-abbreviations: [error, { checkProperties: true, checkFilenames: false }]
  unicorn/relative-url-style: [error, never]
  unicorn/require-array-join-separator: [error]
  unicorn/require-number-to-fixed-digits-argument: [error]
  # unicorn/require-post-message-target-origin (Per sub-config)
  unicorn/string-content: [off]
  unicorn/template-indent: [error]
  # unicorn/text-encoding-identifier-case (Per sub-config)
  unicorn/throw-new-error: [error]
